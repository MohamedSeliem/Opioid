opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv")
View(opioids)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv")
View(overdoses)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=FALSE)
View(prescriber.info)
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
limit.rows <- 25000
df <- data.frame(fread("../input/prescriber-info.csv",nrows=limit.rows))
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
limit.rows <- 25000
df <- data.frame("prescriber-info.csv")
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df[,char_cols] <- lapply(df[,char_cols],as.factor)
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df[,char_cols] <- lapply(df[,char_cols],as.factor
)
df <- df[, !names(df) %in% opioids]
limit.rows <- 25000
df <- data.frame("prescriber-info.csv")
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
limit.rows <- 25000
df <- data.frame("prescriber-info.csv")
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame("prescriber-info.csv")
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
str(df[,1:6])
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame(fread("C:/R Work Directory/Opioid/prescriber-info.csv",nrows=limit.rows))
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
View(rare.abbrev)
View(rare.abbrev)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(df$State)
levels(df$State) <- c(levels(df$State),"other")
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
View(rare.abbrev)
View(rare.abbrev)
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(df$State)
View(df)
View(df)
df <- cbind(df[names(df)!="State"],dummy(df$State))
df %>%
group_by(Credentials) %>%
dplyr::summarise(credential.counts = n()) %>%
arrange(credential.counts) %>%
data.frame() %>%
head(n=25)
df %<>%
select(-Credentials)
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
glimpse()
common.specialties <- df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
filter(specialty.counts > 50) %>%
select(Specialty)
common.specialties <- levels(droplevels(common.specialties$Specialty))
new.specialties <- factor(x=rep("other",nrow(df)),levels=c(common.specialties,"Surgeon","other","Pain.Management"))
new.specialties[df$Specialty %in% common.specialties] <- df$Specialty[df$Specialty %in% common.specialties]
new.specialties[grepl("surg",df$Specialty,ignore.case=TRUE)] <- "Surgeon"
new.specialties[grepl("pain",df$Specialty,ignore.case=TRUE)] <- "Pain.Management"
new.specialties <- droplevels(new.specialties)
df$Specialty <- new.specialties
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
head(n=25)
df <- df[!is.na(df$Specialty),]
df <- cbind(df[,names(df)!="Specialty"],dummy(df$Specialty))
df <- df[vapply(df,function(x) if (is.numeric(x)){sum(x)>0}else{TRUE},FUN.VALUE=TRUE)]
df <- df[vapply(df,function(x) if (is.numeric(x)){sum(as.numeric(x))>0}else{TRUE},FUN.VALUE=TRUE)]
train_faction <- 0.8
train_ind <- sample(nrow(df),round(train_faction*nrow(df)))
df %<>% select(-NPI)
df$Opioid.Prescriber <- as.factor(ifelse(df$Opioid.Prescriber==1,"yes","no"))
train_set <- df[train_ind,]
test_set <- df[-train_ind,]
set.seed(42)
objControl <- trainControl(method='cv', number=5, returnResamp='none', summaryFunction = twoClassSummary, classProbs = TRUE)
model <- train(train_set %>% select(-Opioid.Prescriber),train_set$Opioid.Prescriber,
method='gbm',
metric = "ROC",
trControl=objControl)
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame(fread("C:/R Work Directory/Opioid/prescriber-info.csv",nrows=limit.rows))
#data cleaning
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
View(prescriber.info)
View(prescriber.info)
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(df$State)
?droplevels
df$State <- droplevels(as.factor(df$State))
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame(fread("C:/R Work Directory/Opioid/prescriber-info.csv",nrows=limit.rows))
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(as.factor(df$State))
df <- cbind(df[names(df)!="State"],dummy(df$State))
df %>%
group_by(Credentials) %>%
dplyr::summarise(credential.counts = n()) %>%
arrange(credential.counts) %>%
data.frame() %>%
head(n=25)
df %<>%
select(-Credentials)
df$Credentials <- as.factor(gsub("[(\\. )]", "", df$Credentials))
new.credentials <- factor(x=rep("Other", nrow(df)), levels=c("MD", "DDS", "DO", "NP", "PA", "Other"))
new.credentials[grepl("MD", df$Credentials, ignore.case=TRUE)] <- "MD"
new.credentials[grepl("DDS", df$Credentials, ignore.case=TRUE)] <- "DDS"
new.credentials[grepl("DO", df$Credentials, ignore.case=TRUE)] <- "DO"
new.credentials[grepl("(NP|APRN|NURSEPRACTITIONER)", df$Credentials, ignore.case=TRUE)] <- "NP"
new.credentials[grepl("(PA|PHYSICIANASSIST)", df$Credentials, ignore.case=TRUE)] <- "PA"
df$Credentials <- new.credentials
df <- cbind(df[, names(df) != "Credentials"], dummy(df$Credentials))
df$Credentials <- as.factor(gsub("[(\\. )]", "", df$Credentials))
View(df)
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
glimpse()
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame(fread("C:/R Work Directory/Opioid/prescriber-info.csv",nrows=limit.rows))
#data cleaning
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(as.factor(df$State))
df <- cbind(df[names(df)!="State"],dummy(df$State))
df %>%
group_by(Credentials) %>%
dplyr::summarise(credential.counts = n()) %>%
arrange(credential.counts) %>%
data.frame() %>%
head(n=25)
df %<>%
select(-Credentials)
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
glimpse()
# Get the common specialties, we won't change those
common.specialties <- df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
filter(specialty.counts > 50) %>%
select(Specialty)
common.specialties <- levels(droplevels(common.specialties$Specialty))
common.specialties <- levels(droplevels(as.factor(common.specialties$Specialty)))
# Default to "other", then fill in. I'll make special levels for surgeons and collapse any category containing the word pain
new.specialties <- factor(x=rep("other",nrow(df)),levels=c(common.specialties,"Surgeon","other","Pain.Management"))
new.specialties[df$Specialty %in% common.specialties] <- df$Specialty[df$Specialty %in% common.specialties]
new.specialties[grepl("surg",df$Specialty,ignore.case=TRUE)] <- "Surgeon"
new.specialties[grepl("pain",df$Specialty,ignore.case=TRUE)] <- "Pain.Management"
new.specialties <- droplevels(new.specialties)
df$Specialty <- new.specialties
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
head(n=25)
df <- df[!is.na(df$Specialty),]
df <- cbind(df[,names(df)!="Specialty"],dummy(df$Specialty))
df <- df[vapply(df,function(x) if (is.numeric(x)){sum(as.numeric(x))>0}else{TRUE},FUN.VALUE=TRUE)]
#Model Building
train_faction <- 0.8
train_ind <- sample(nrow(df),round(train_faction*nrow(df)))
df %<>% select(-NPI)
df$Opioid.Prescriber <- as.factor(ifelse(df$Opioid.Prescriber==1,"yes","no"))
train_set <- df[train_ind,]
test_set <- df[-train_ind,]
set.seed(42)
objControl <- trainControl(method='cv', number=5, returnResamp='none', summaryFunction = twoClassSummary, classProbs = TRUE)
model <- train(train_set %>% select(-Opioid.Prescriber),train_set$Opioid.Prescriber,
method='gbm',
metric = "ROC",
trControl=objControl)
View(prescriber.info)
str(prescriber.info)
View(train_set)
str(train_set)
str(train_ind)
str(test_set)
train_faction <- 0.8
train_ind <- sample(nrow(df),round(train_faction*nrow(df)))
df %<>% select(-NPI)
df$Opioid.Prescriber <- as.factor(ifelse(df$Opioid.Prescriber==1,"yes","no"))
train_set <- df[train_ind,]
train_set$Gender<-as.factor(train_set$Gender)
test_set <- df[-train_ind,]
test_set$Gender<-as.factor(test_set$Gender)
library(dplyr)
library(magrittr)
library(ggplot2)
library(maps)
library(data.table)
library(lme4)
library(caret)
opioids <- read.csv("C:/R Work Directory/Opioid/opioids.csv", header=T)
overdoses <- read.csv("C:/R Work Directory/Opioid/overdoses.csv", header=T)
prescriber.info <- read.csv("C:/R Work Directory/Opioid/prescriber-info.csv", header=T)
limit.rows <- 25000
df <- data.frame(fread("C:/R Work Directory/Opioid/prescriber-info.csv",nrows=limit.rows))
#data cleaning
opioids <- as.character(opioids[,1]) # First column contains the names of the opiates
opioids <- gsub("\ |-",".",opioids) # replace hyphens and spaces with periods to match the dataset
df <- df[, !names(df) %in% opioids]
char_cols <- c("NPI",names(df)[vapply(df,is.character,TRUE)])
df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts)
rare.abbrev <- df %>%
group_by(State) %>%
dplyr::summarise(state.counts = n()) %>%
arrange(state.counts) %>%
filter(state.counts < 10) %>%
select(State)
levels(df$State) <- c(levels(df$State),"other")
df$State[df$State %in% rare.abbrev$State] <- "other"
df$State <- droplevels(as.factor(df$State))
df <- cbind(df[names(df)!="State"],dummy(df$State))
df %>%
group_by(Credentials) %>%
dplyr::summarise(credential.counts = n()) %>%
arrange(credential.counts) %>%
data.frame() %>%
head(n=25)
df %<>%
select(-Credentials)
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
glimpse()
# Get the common specialties, we won't change those
common.specialties <- df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
filter(specialty.counts > 50) %>%
select(Specialty)
common.specialties <- levels(droplevels(as.factor(common.specialties$Specialty)))
# Default to "other", then fill in. I'll make special levels for surgeons and collapse any category containing the word pain
new.specialties <- factor(x=rep("other",nrow(df)),levels=c(common.specialties,"Surgeon","other","Pain.Management"))
new.specialties[df$Specialty %in% common.specialties] <- df$Specialty[df$Specialty %in% common.specialties]
new.specialties[grepl("surg",df$Specialty,ignore.case=TRUE)] <- "Surgeon"
new.specialties[grepl("pain",df$Specialty,ignore.case=TRUE)] <- "Pain.Management"
new.specialties <- droplevels(new.specialties)
df$Specialty <- new.specialties
df %>%
group_by(Specialty) %>%
dplyr::summarise(specialty.counts = n()) %>%
arrange(desc(specialty.counts)) %>%
data.frame() %>%
head(n=25)
df <- df[!is.na(df$Specialty),]
df <- cbind(df[,names(df)!="Specialty"],dummy(df$Specialty))
df <- df[vapply(df,function(x) if (is.numeric(x)){sum(as.numeric(x))>0}else{TRUE},FUN.VALUE=TRUE)]
#Model Building
train_faction <- 0.8
train_ind <- sample(nrow(df),round(train_faction*nrow(df)))
df %<>% select(-NPI)
df$Opioid.Prescriber <- as.factor(ifelse(df$Opioid.Prescriber==1,"yes","no"))
train_set <- df[train_ind,]
train_set$Gender<-as.factor(train_set$Gender)
test_set <- df[-train_ind,]
test_set$Gender<-as.factor(test_set$Gender)
str(train_set)
set.seed(42)
objControl <- trainControl(method='cv', number=5, returnResamp='none', summaryFunction = twoClassSummary, classProbs = TRUE)
model <- train(train_set %>% select(-Opioid.Prescriber),train_set$Opioid.Prescriber,
method='gbm',
metric = "ROC",
trControl=objControl)
importance <- as.data.frame(varImp(model)[1])
?varImp
varImp(model)[1]
varImp(model)
varImp(model, scale = FALSE)
library("gbm", lib.loc="~/R/win-library/3.4")
library(gbm)
importance <- as.data.frame(varImp(model)[1])
importance <- cbind(row.names(importance), Importance=importance)
row.names(importance)<-NULL
names(importance) <- c("Feature","Importance")
importance %>% arrange(desc(Importance)) %>%
mutate(Feature=factor(Feature,levels=as.character(Feature))) %>%
slice(1:15) %>%
ggplot() + geom_bar(aes(x=Feature,y=(Importance)),stat="identity",fill="blue") +
theme(axis.text.x=element_text(angle=45,vjust = 1,hjust=1),axis.ticks.x = element_blank()) +ylab("Importance") +ggtitle("Feature Importance for Detecting Opioid Prescription")
importance %>% arrange(desc(Importance)) %>%
mutate(Feature=factor(Feature,levels=as.character(Feature))) %>%
slice(1:15) %>%
ggplot() + geom_bar(aes(x=Feature,y=(Importance)),stat="identity",fill="red") +
theme(axis.text.x=element_text(angle=45,vjust = 1,hjust=1),axis.ticks.x = element_blank()) +ylab("Importance") +ggtitle("Feature Importance for Detecting Opioid Prescription")
all_states <- map_data("state")
od <- read.csv("../input/overdoses.csv",stringsAsFactors = FALSE)
od$State <- as.factor(od$State)
od$Population <- as.numeric(gsub(",","",od$Population))
od$Deaths<- as.numeric(gsub(",","",od$Deaths))
od %>%
mutate(state.lower=tolower(State), Population=as.numeric(Population)) %>%
merge(all_states,by.x="state.lower",by.y="region") %>%
select(-subregion,-order) %>%
ggplot() + geom_map(map=all_states, aes(x=long, y=lat, map_id=state.lower,fill=Deaths/Population*1e6) )  + ggtitle("U.S. Opiate Overdose Death Rate") +
geom_text(data=data.frame(state.center,od$Abbrev),aes(x=x, y=y,label=od.Abbrev),size=3) +
scale_fill_continuous(low='gray85', high='darkred',guide=guide_colorbar(ticks=FALSE,barheight=1,barwidth=10,title.vjust=.8,values=c(0.2,0.3)),name="Deaths per Million") + theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),legend.position="bottom",plot.title=element_text(size=20))
#summary
all_states <- map_data("state")
od <- read.csv("C:/R Work Directory/Opioid/overdoses.csv",stringsAsFactors = FALSE)
od$State <- as.factor(od$State)
od$Population <- as.numeric(gsub(",","",od$Population))
od$Deaths<- as.numeric(gsub(",","",od$Deaths))
od %>%
mutate(state.lower=tolower(State), Population=as.numeric(Population)) %>%
merge(all_states,by.x="state.lower",by.y="region") %>%
select(-subregion,-order) %>%
ggplot() + geom_map(map=all_states, aes(x=long, y=lat, map_id=state.lower,fill=Deaths/Population*1e6) )  + ggtitle("U.S. Opiate Overdose Death Rate") +
geom_text(data=data.frame(state.center,od$Abbrev),aes(x=x, y=y,label=od.Abbrev),size=3) +
scale_fill_continuous(low='gray85', high='darkred',guide=guide_colorbar(ticks=FALSE,barheight=1,barwidth=10,title.vjust=.8,values=c(0.2,0.3)),name="Deaths per Million") + theme(axis.text=element_blank(),axis.title=element_blank(),axis.ticks=element_blank(),legend.position="bottom",plot.title=element_text(size=20))
